#pragma checksum "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameCodes\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "82215f7d8ecccd2f7aa1bfa85e7f01f6e68ca2fe"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FrameCodes_Index), @"mvc.1.0.view", @"/Views/FrameCodes/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\_ViewImports.cshtml"
using NetCoreFrame.WebUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\_ViewImports.cshtml"
using NetCoreFrame.WebUI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"82215f7d8ecccd2f7aa1bfa85e7f01f6e68ca2fe", @"/Views/FrameCodes/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c13831c9e89f928e27b32da7307544f215310db6", @"/Views/_ViewImports.cshtml")]
    public class Views_FrameCodes_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("layui-form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameCodes\Index.cshtml"
  

    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<div style=""padding:5px;"">
    <div class=""layui-input-inline"">
        <label class=""layui-form-label"">字典名称</label>
        <div class=""layui-input-inline"">
            <input type=""text"" name=""codename"" id=""codename"" lay-verify=""required"" placeholder=""数据名称"" autocomplete=""off"" class=""layui-input"">
        </div>
        <div class=""layui-inline"">
            <label class=""layui-form-label"">日期</label>
            <div class=""layui-input-inline"">
                <input type=""text"" class=""layui-input"" id=""CreateTime"" placeholder=""yyyy-MM-dd"">
            </div>
        </div>
    </div>
    <div class=""layui-form-item"" style=""float:right;"">
        <button class=""layui-btn layui-btn-sm"" data-type=""btnSearch"">查询</button>
        <button class=""layui-btn layui-btn-sm"" data-type=""btnAdd"">新建</button>
        <button class=""layui-btn layui-btn-danger layui-btn-sm"" data-type=""btnDel"">删除</button>
    </div>
</div>


");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "82215f7d8ecccd2f7aa1bfa85e7f01f6e68ca2fe4800", async() => {
                WriteLiteral("\r\n    <div class=\"layui-row\">\r\n        <table id=\"mainList\" lay-filter=\"mainList\" class=\"layui-table\"\r\n               lay-size=\"sm\"></table>\r\n    </div>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script type=""text/javascript"">
        var index;

        layui.use(['layer', 'table', ""tree""], function ()
        {
            var form = layui.form,
                layer = layui.layer,
                $ = layui.jquery,
                laydate = layui.laydate;

            //常规用法
              laydate.render({
                elem: '#CreateTime'
              });
            var  Layuitable = layui.table;

            var columns = [
               { checkbox: true, fixed: true },
               { field: 'Index', title: '序号', width: 60, templet: '#Index' },

                { field: 'CodeName', title: '字典名称', edit: 'text' },
                { field: 'Operate', title: '操作', templet: '#Operate'  }

            ];
            Layuitable.render({
                // skin: 'line', //行边框风格
                even: false,//开启隔行背景
                size: 'sm', //小尺寸的表格
                height: 'full-50',
                elem: '#mainList',
                page: true,
             ");
                WriteLiteral(@"   url: '/FrameCodes/All',
                cols: [columns]
                , response: {
                    statusCode: 200 //规定成功的状态码，默认：0
                },
                loading: true
            });
            //主列表加载，可反复调用进行刷新
            var config = {};  //table的参数，如搜索key，点击tree的id
            var refreshList = function (options) {
                if (options != undefined) {
                    $.extend(config, options);
                }
                Layuitable.reload('mainList', {
                    url: '/FrameCodes/All',
                    where: config
                    , response: {
                        statusCode: 200 //规定成功的状态码，默认：0
                    }
                });
            };
             //监听表格内部按钮
            Layuitable.on('tool(mainList)', function (obj)  {
             var data = obj.data;

            if (obj.event === 'detail') {      //查看
                index = layer.open
                ({
                    type: 2,
            ");
                WriteLiteral("        title: \'设置\',\r\n                    content: \'");
#nullable restore
#line 98 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameCodes\Index.cshtml"
                         Write(Url.Action("ValueIndex", "FrameCodes"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"?CodeID=' + data.CodeID,
                    area: ['650px', '500px'],
                    btnAlign: 'c',
                });
               }
            });

             //监听页面主按钮操作
             var active = {
                btnDel: function ()
                 {
                     debugger;
                     //批量删除
                    var table = layui.table;
                    var checkStatus = table.checkStatus('mainList');
                    var datas = checkStatus.data;
                    var id = new Array();//声明数组
                    for (var i in datas) {
                        id[i] = datas[i].ID;//得到复选框的值
                    }
                    $.ajax({
                        url: '/FrameCodes/Delete',
                        type: ""POST"",
                        traditional: true,//传数组一定要加的
                        data: { ""ids"": id},
                        dataType: ""json"",
                        success: function (data) {
                            if ");
                WriteLiteral(@"(data.Code == 200) {
                                ShowNotice();
                            }
                        }
                    });
                 }
                , btnAdd: function () {  //添加
                    Create();
                }
                , btnEdit: function () {  //编辑
                    var checkStatus = layui.table.checkStatus('mainList')
                        , data = checkStatus.data;
                    if (data.length != 1) {
                        layer.msg(""请选择编辑的行，且同时只能编辑一行"");
                        return;
                    }
                    //editDlg.update(data[0]);
                    Edit(data[0][""ID""]);
                }

                , btnSearch: function () {   //搜索

                    Layuitable.reload('mainList', {
                        url: '/FrameCodes/All',
                        where: {
                            CodeName: $('#codename').val(),
                            CreateTime:$(""#CreateTime"").val()");
                WriteLiteral(@"
                        }
                        , response: {
                            statusCode: 200 //规定成功的状态码，默认：0
                        }
                    });

                }
                , btnRefresh: function () {
                    refreshList();
                }
            };

            $('.layui-btn').on('click', function ()
            {
                var type = $(this).data('type');
                active[type] ? active[type].call(this) : '';
            });

        });
        function Create() {
              index = layer.open
                ({
                    type: 2,
                    title:'新建',
                    content: '");
#nullable restore
#line 176 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameCodes\Index.cshtml"
                         Write(Url.Action("Create", "FrameCodes"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    area: ['400px', '300px'],
                    btnAlign: 'c',
                });
        }

        function Edit(id) {
             index = layer.open
                ({
                    type: 2,
                    title:'编辑',
                    content: '/FrameModule/Edit?id=' + id,
                         area: ['500px', '300px'],
                    btnAlign: 'c',
                    end: function () {
                        ShowNotice();
                    }
                });
        }

        function ShowNotice() {
            var noticeIndex = layer.load(1, {
                shade: [0.1, '#fff'] //0.1透明度的白色背景
            });
            layer.msg(""操作成功"");
            layer.close(noticeIndex);
            location.reload();//弹出层结束后，刷新主页面
        }



    </script>
    <script type=""text/html"" id=""Operate"">
        <a class=""layui-btn layui-btn-primary layui-btn-xs"" lay-event=""detail"">设置</a>
    </script>
    <script type=""text/html"" i");
                WriteLiteral("d=\"Index\">\r\n        {{d.LAY_TABLE_INDEX+1}}\r\n    </script>\r\n");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

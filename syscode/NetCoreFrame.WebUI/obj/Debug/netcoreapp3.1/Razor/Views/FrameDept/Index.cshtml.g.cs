#pragma checksum "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameDept\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "7b43dce82992934cbd033f7af34e34accbd40507"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FrameDept_Index), @"mvc.1.0.view", @"/Views/FrameDept/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\_ViewImports.cshtml"
using NetCoreFrame.WebUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\_ViewImports.cshtml"
using NetCoreFrame.WebUI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"7b43dce82992934cbd033f7af34e34accbd40507", @"/Views/FrameDept/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c13831c9e89f928e27b32da7307544f215310db6", @"/Views/_ViewImports.cshtml")]
    public class Views_FrameDept_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("layui-form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 2 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameDept\Index.cshtml"
  

    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            DefineSection("Styles", async() => {
                WriteLiteral("\r\n    <style type=\"text/css\">\r\n        .layui-form-item {\r\n            display: inline-block;\r\n            clear: none !important;\r\n            margin-bottom:0px !important;\r\n        }\r\n    </style>\r\n");
            }
            );
            WriteLiteral(@"<div style=""padding:5px;"">
    <div class=""layui-form-item"">
        <label class=""layui-form-label"">部门名称</label>
        <div class=""layui-input-inline"">
            <input type=""text"" name=""username"" lay-verify=""required"" placeholder=""请输入部门名称"" autocomplete=""off"" class=""layui-input"">
        </div>
    </div>
    <div class=""layui-form-item"" style=""float:right;"">
        <button class=""layui-btn layui-btn-sm"" data-type=""btnAdd"">新建</button>
        <button class=""layui-btn layui-btn-sm"" data-type=""btnDel"">删除</button>
        <button class=""layui-btn layui-btn-sm"" data-type=""btnEdit"">修改</button>
        <button class=""layui-btn layui-btn-sm"" data-type=""btnToken"">获取Token</button>
    </div>
</div>
");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "7b43dce82992934cbd033f7af34e34accbd405074891", async() => {
                WriteLiteral(@"
    <div class=""layui-row"">
        <div class=""layui-col-xs2"">
            <div id=""test1""></div>
        </div>
        <div class=""layui-col-xs10"">
            <table id=""mainList""
                   lay-data=""{height: 'full-80',cellMinWidth:80, page:true, id:'mainList'}""
                   lay-filter=""list"" lay-size=""sm""></table>
        </div>
    </div>
");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script type=""text/javascript"">
        var index;
        var treeData = """";

        function GetToken() {
            $.ajax({
                type: 'POST',
                cache: false,
                dataType: 'json',
                url: '/FrameUser/GetToken?userid=1',
                success: function (data) {
                    debugger;
                }
            });
        }

        function InitailDept() {
            $.ajax({
                type: 'POST',
                cache: false,
                dataType: 'json',
                url: '/FrameDept/LoadDeptTree',
                success: function (data) {
                    treeData = data.Message;
                    InitailTree();
                }
            });
        }

        function InitailTree() {
            layui.use([""tree""], function () {
                var tree = layui.tree;
                data = eval('(' + treeData + ')');

                tree.render({
                    el");
                WriteLiteral(@"em: '#test1'
                    , data: data
                    , onlyIconControl: true  //是否仅允许节点左侧图标控制展开收缩
                    , click: function (obj) {
                        mainList({
                            DeptId: obj.data.id,
                            page: 1, limit: 1
                        });

                    }
                });
            });
        }
        layui.use(['layer', 'table', ""tree""], function () {
            var form = layui.form,
                layer = layui.layer,
                $ = layui.jquery;
            var table = layui.table;
            var tree = layui.tree;
            var treeSelect = layui.treeSelect;

            //加载表头
            $.getJSON('/FrameDept/All',
                { page: 1, limit: 1 },
                function (data) {

                    table.render({
                        // skin: 'line', //行边框风格
                        even: true,//开启隔行背景
                        size: 'sm', //小尺寸的表格
                  ");
                WriteLiteral(@"      height: 'full-70',
                        elem: '#mainList',
                        page: true,
                        url: '/FrameDept/All',
                        cols: [[
                            { checkbox: true, fixed: true },
                            { field: 'Index', title: '序号', width: 60, templet: '#Index' },
                            { field: 'DeptName', title: '部门名称' },
                            { field: 'DeptCode', title: '部门编码' },
                            { field: 'DeptID', title: '部门ID' },
                            { field: 'CreateTime', title: '创建日期' }
                        ]]
                        , response: {
                            statusCode: 200 //规定成功的状态码，默认：0
                        }
                    });
                });

            //主列表加载，可反复调用进行刷新
            var config = {};  //table的参数，如搜索key，点击tree的id
            var mainList = function (options) {
                if (options != undefined) {
                    $.exten");
                WriteLiteral(@"d(config, options);
                }
                table.reload('mainList', {
                    url: '/FrameDept/All',
                    where: config
                    , response: {
                        statusCode: 200 //规定成功的状态码，默认：0
                    }
                });
            };


            //加载部门树
            $.ajax({
                type: 'POST',
                cache: false,
                dataType: 'json',
                url: '/FrameDept/LoadDeptTree',
                success: function (data) {
                    treeData = data.Message;
                    data = eval('(' + treeData + ')');
                    debugger;
                    tree.render({
                        elem: '#test1'
                        , data: data
                        , onlyIconControl: true  //是否仅允许节点左侧图标控制展开收缩
                        , click: function (obj) {
                            mainList({ DeptId: obj.data.id });

                        }
            ");
                WriteLiteral("        });\r\n                }\r\n            });\r\n        });\r\n\r\n        function Create() {\r\n              index = layer.open\r\n                ({\r\n                    type: 2, //iframe层\r\n                    title:\'新建\',\r\n                         content: \'");
#nullable restore
#line 170 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameDept\Index.cshtml"
                              Write(Url.Action("Create", "FrameDept"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                         area: ['500px', '300px'],
                    btnAlign: 'c',
                    end: function () {
                        ShowNotice();
                    }
                });
        }
        function Edit(id) {
             index = layer.open
                ({
                    type: 2,
                    title:'编辑',
                    content: '/FrameDept/Edit?id=' + id,
                         area: ['500px', '300px'],
                    btnAlign: 'c',
                    end: function () {
                        ShowNotice();
                    }
                });

        }

        function ShowNotice() {
            var noticeIndex = layer.load(1, {
                shade: [0.1, '#fff'] //0.1透明度的白色背景
            });
            layer.msg(""操作成功"");
            layer.close(noticeIndex);
            location.reload();//弹出层结束后，刷新主页面
        }

        $('.layui-btn').on('click', function () {
            debugger;
            var ");
                WriteLiteral(@"type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });
        //监听页面主按钮操作
        var active = {

            btnDel: function ()
            {      //批量删除
                var table = layui.table;
                var checkStatus = table.checkStatus('mainList');
                var datas = checkStatus.data;
                var id = new Array();//声明数组
                for (var i in datas) {
                    id[i] = datas[i].ID;//得到复选框的值
                }
                $.ajax({
                    url: '/FrameDept/Delete',
                    type: ""POST"",
                    traditional: true,//传数组一定要加的
                    data: { ""ids"": id},
                    dataType: ""json"",
                    success: function (data) {

                        if (data.Code == 200) {
                            ShowNotice();
                        }
                    }
                });
             }
            , btnAdd: function () {  //");
                WriteLiteral(@"添加
                //editDlg.add();
                Create();
            }
            , btnToken: function () {
                GetToken();
            }
            , btnEdit: function () {  //编辑
                var checkStatus = layui.table.checkStatus('mainList')
                    , data = checkStatus.data;
                if (data.length != 1) {
                    layer.msg(""请选择编辑的行，且同时只能编辑一行"");
                    return;
                }
                //editDlg.update(data[0]);
                Edit(data[0][""ID""]);
            }
            , search: function () {   //搜索
                mainList({ key: $('#key').val() });
            }
            , btnRefresh: function () {
                mainList();
            }
        };
        var editDlg = function () {
            var vm;
            var update = false;  //是否为更新
            var show = function (data) {
                var title = update ? ""编辑信息"" : ""添加"";
                 index = layer.open
                ({");
                WriteLiteral("\r\n                    type: 2,\r\n                    title: title,\r\n                    content: \'");
#nullable restore
#line 266 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameDept\Index.cshtml"
                         Write(Url.Action("Create","FrameDept"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    area: ['500px', '300px'],
                    btnAlign: 'c',

                });
            }
            return {
                add: function () { //弹出添加
                    update = false;
                    show({
                        Id: ''
                    });
                },
                update: function (data) { //弹出编辑框
                    update = true;
                    show(data);
                }
            };
        }();


    </script>
    <script type=""text/html"" id=""Index"">
        {{d.LAY_TABLE_INDEX+1}}
    </script>
");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591

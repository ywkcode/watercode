#pragma checksum "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameTableInfo\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "491a2fb695d41cea2a5a073eac77ddce02ef2087"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_FrameTableInfo_Index), @"mvc.1.0.view", @"/Views/FrameTableInfo/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\_ViewImports.cshtml"
using NetCoreFrame.WebUI;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\_ViewImports.cshtml"
using NetCoreFrame.WebUI.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"491a2fb695d41cea2a5a073eac77ddce02ef2087", @"/Views/FrameTableInfo/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"c13831c9e89f928e27b32da7307544f215310db6", @"/Views/_ViewImports.cshtml")]
    public class Views_FrameTableInfo_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("layui-form"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameTableInfo\Index.cshtml"
  
    Layout = "~/Views/Shared/_Layout.cshtml";

#line default
#line hidden
#nullable disable
            WriteLiteral("  \r\n\r\n");
            DefineSection("Styles", async() => {
                WriteLiteral(@"
    <style type=""text/css"">
        .layui-table-view .layui-table-body tr.table_tr_click {
            background-color: #e6e6e6;
        }

        .icon_choose {
            font-size: 18px;
            font-weight: bold;
        }
          .layui-form-item {
            display: inline-block;
            clear: none !important;
            margin-bottom: 0px !important;
        }
    </style>
");
            }
            );
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "491a2fb695d41cea2a5a073eac77ddce02ef20874372", async() => {
                WriteLiteral(@"
    <div class=""layui-row"">
        <div class=""layui-col-xs4"">
            <script type=""text/html"" id=""toolbar"">

                <div class=""layui-btn-group"">
                    <button type=""button"" class=""layui-btn-sm layui-btn-primary"" lay-event=""btnAdd""> <i class=""layui-icon"">&#xe654;</i>新建</button>
                    <button type=""button"" class=""layui-btn-sm layui-btn-primary"" lay-event=""btnGenerate""> <i class=""layui-icon"">&#xe642;</i>CRUD生成</button>
                    <button type=""button"" class=""layui-btn-sm layui-btn-primary"" lay-event=""btnDel""><i class=""layui-icon"">&#xe640;</i>删除</button>
                </div>
              
            </script>
            <table id=""mainList"" lay-filter=""mainList"" class=""layui-table""
                   lay-size=""sm""></table>
        </div>
        <div class=""layui-col-xs8"">
            <script type=""text/html"" id=""toolbar2"">
                <div class=""layui-btn-group"">
                    <button type=""button"" class=""layui-btn-sm layui-");
                WriteLiteral(@"btn-primary"" lay-event=""btnFieldAdd""> <i class=""layui-icon"">&#xe654;</i>新建字段</button> 
                    <button type=""button"" class=""layui-btn-sm layui-btn-primary"" lay-event=""btnFieldDel""><i class=""layui-icon"">&#xe640;</i>删除字段</button>
                </div>
               
            </script>
            <table id=""fieldList"" lay-filter=""fieldList"" class=""layui-table"" lay-data=""{height: 'full-50', id:'menuList',  text: { none: '单击列表查看表单明细' }}""
                   lay-size=""sm""></table>
        </div>

    </div>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            DefineSection("Scripts", async() => {
                WriteLiteral(@"

    <script type=""text/javascript"">
        var index;
        var tabid = ""0""; //表单id
        var tabname = """"; //表单名
        layui.use(['layer', 'table', ""tree""], function ()
        {
            var form = layui.form,
                layer = layui.layer,
                $ = layui.jquery;
            var Layuitable = layui.table;

            var columns = [
                { checkbox: true, fixed: true },
                { field: 'TableName', title: '表单名称'},
                { field: 'PhysicalName', title: '数据表名' },
                { field: 'ControllerName', title: '控制器' },
                { fixed: 'right', width: 80, align: 'center', toolbar: '#barproperty', title: ""属性"" }
            ];
            var columns_field = [
                { checkbox: true, fixed: true },
                { field: 'FieldDisplayName', title: '字段名' },
                { field: 'FieldType', title: '字段类型' },
                { field: 'FieldLength', title: '字段长度' },
                { field: 'DecimalLength',");
                WriteLiteral(@" title: 'Decimal长度' },
                { field: 'FieldDisplayType', title: '字段展现' },
                { field: 'FieldDisplayName', title: '中文名' },
                { field: 'DataSource_CodeName', title: '数据源' },
                { field: 'IsShowInAdd', title: '是否添加显示', toolbar: '#barIsShowInAdd' },
                { field: 'IsMustFill', title: '是否必填', toolbar: '#barIsMustFill' },
                { field: 'IsSearchCondition', title: '是否查询', toolbar: '#barIsSearchCondition' },
            ];
            Layuitable.render({
                // skin: 'line', //行边框风格
                even: false,//开启隔行背景
                size: 'sm', //小尺寸的表格
                height: 'full-50',
                elem: '#mainList',
                page: true,
                url: '/FrameTableInfo/All',
                cols: [columns]
                , response: {
                    statusCode: 200 //规定成功的状态码，默认：0
                },
                toolbar: '#toolbar',
                loading: true
            });
    ");
                WriteLiteral(@"        //头工具栏事件
              Layuitable.on('toolbar(mainList)', function(obj){
                switch(obj.event){
                    case 'btnAdd':
                        Create();
                  break;
                  case 'btnDel':
                        Delete();
                  break;
                  case 'btnGenerate':
                    Generate();
                  break; 
                };
              });
             
            Layuitable.render({
                // skin: 'line', //行边框风格
                even: false,//开启隔行背景
                size: 'sm', //小尺寸的表格
                height: 'full-50',
                elem: '#fieldList',
                page: true,
                url: '/FrameTableField/LoadFieldList',
                where: { TableId: 0 },
                 toolbar: '#toolbar2',
                cols: [columns_field]
                , response: {
                    statusCode: 200 //规定成功的状态码，默认：0
                },
                loading: tru");
                WriteLiteral(@"e
            });
             //头工具栏事件
              Layuitable.on('toolbar(fieldList)', function(obj){
                switch(obj.event){
                  case 'btnFieldAdd':
                        FieldCreate();
                  break;
                    case 'btnFieldDel':
                        FieldDel();
                  break;
                
                };
              });
            //监听行单击事件（单击事件为：rowDouble）
            Layuitable.on('row(mainList)', function (obj) {
                debugger;
                menuList({ TableId: obj.data.TableId });
                tabid = obj.data.TableId;
                tabname = obj.data.TableName;
            });
            //主列表加载，可反复调用进行刷新
            var config = {};  //table的参数，如搜索key，点击tree的id
            var mainList = function (options) {
                if (options != undefined) {
                    $.extend(config, options);
                }
                Layuitable.reload('mainList', {
                    ");
                WriteLiteral(@"url: '/FrameTableInfo/All',
                    where: config
                    , response: {
                        statusCode: 200 //规定成功的状态码，默认：0
                    }
                });
            };

            var menuList = function (options) {
                if (options != undefined) {
                    $.extend(config, options);
                }
                Layuitable.reload('fieldList', {
                    url: '/FrameTableField/LoadFieldList',
                    where: config
                    , response: {
                        statusCode: 200 //规定成功的状态码，默认：0
                    }
                });

            };
        });
        function Create() {
            index = layer.open
                ({
                    type: 2,
                    title:'新建',
                    content: '");
#nullable restore
#line 186 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameTableInfo\Index.cshtml"
                         Write(Url.Action("Create", "FrameTableInfo"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    area: ['500px', '400px'],
                    btnAlign: 'c',
             });
        }
        function Generate() {
               var table = layui.table;
                var checkStatus = table.checkStatus('mainList');
                var datas = checkStatus.data;
                debugger;
                if (datas.length > 1||datas.length==0) {
                    layer.msg(""请选择正确行！"");
                    return;
                } 
                 $.ajax({
                    url: '/FrameTableInfo/GeneratePage',
                    type: ""POST"",
                    traditional: true,//传数组一定要加的
                    data: { ""TableID"": datas[0].TableId},
                    dataType: ""json"",
                     success: function (data) {
                         debugger;
                         if (data.Status == true) {
                             layer.msg(""操作成功！"");
                             return true;
                        }
                    ");
                WriteLiteral(@"}
                });
        }

        function Delete() {
               //批量删除
                var table = layui.table;
                var checkStatus = table.checkStatus('mainList');
                var datas = checkStatus.data;
                var id = new Array();//声明数组
                for (var i in datas) {
                    id[i] = datas[i].ID;//得到复选框的值
                }
                $.ajax({
                    url: '/FrameTableInfo/Delete',
                    type: ""POST"",
                    traditional: true,//传数组一定要加的
                    data: { ""ids"": id},
                    dataType: ""json"",
                    success: function (data) {
                        if (data.Code == 200) {
                            ShowNotice();
                        }
                    }
                });
        }

        function FieldDel() {
             //批量删除
                var table = layui.table;
                var checkStatus = table.checkStatus('fieldList')");
                WriteLiteral(@";
                var datas = checkStatus.data;
                var id = new Array();//声明数组
                for (var i in datas) {
                    id[i] = datas[i].ID;//得到复选框的值
                }
                $.ajax({
                    url: '/FrameTableField/Delete',
                    type: ""POST"",
                    traditional: true,//传数组一定要加的
                    data: { ""ids"": id},
                    dataType: ""json"",
                    success: function (data) {
                        if (data.Code == 200) {
                            ShowNotice();
                        }
                    }
                });
        }
        function FieldCreate() {
            debugger;
            var Filter = ""?TableName="" + tabname + ""&TableId="" + tabid;
            if (tabname == """") {
                layer.msg(""请选择表单！"");
                return;
            }
            index = layer.open
                ({
                    type: 2,
                    title:'新建");
                WriteLiteral("\',\r\n                    content: \'");
#nullable restore
#line 272 "D:\MyPrj\2021\ESOP\代码\NetCoreFrame.WebUI\Views\FrameTableInfo\Index.cshtml"
                         Write(Url.Action("Create", "FrameTableField"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"' + Filter,
                    area: ['800px', '600px'],
                    btnAlign: 'c',
             });
        }
        function Edit(id) {
             index = layer.open
                ({
                    type: 2,
                    title:'编辑',
                    content: '/FrameTableInfo/Edit?id=' + id,
                         area: ['500px', '400px'],
                    btnAlign: 'c',
                    end: function () {
                        ShowNotice();
                    }
                });
        }

        function ShowNotice() {
            var noticeIndex = layer.load(1, {
                shade: [0.1, '#fff'] //0.1透明度的白色背景
            });
            layer.msg(""操作成功"");
            layer.close(noticeIndex);
            location.reload();//弹出层结束后，刷新主页面
        }

        $('.layui-btn').on('click', function () {

            var type = $(this).data('type');
            active[type] ? active[type].call(this) : '';
        });

        //监听页面主按");
                WriteLiteral(@"钮操作
        var active = {

            btnDel: function ()
            {
                //批量删除
                var table = layui.table;
                var checkStatus = table.checkStatus('mainList');
                var datas = checkStatus.data;
                var id = new Array();//声明数组
                for (var i in datas) {
                    id[i] = datas[i].ID;//得到复选框的值
                }
                $.ajax({
                    url: '/FrameTableInfo/Delete',
                    type: ""POST"",
                    traditional: true,//传数组一定要加的
                    data: { ""ids"": id},
                    dataType: ""json"",
                    success: function (data) {
                        if (data.Code == 200) {
                            ShowNotice();
                        }
                    }
                });
            }
            , btnGenerate: function () { //生成页面
                var table = layui.table;
                var checkStatus = table.checkStatus");
                WriteLiteral(@"('mainList');
                var datas = checkStatus.data;
                debugger;
                if (datas.length > 1||datas.length==0) {
                    layer.msg(""请选择正确行！"");
                    return;
                } 
                 $.ajax({
                    url: '/FrameTableInfo/GeneratePage',
                    type: ""POST"",
                    traditional: true,//传数组一定要加的
                    data: { ""TableID"": datas[0].TableId},
                    dataType: ""json"",
                     success: function (data) {
                         debugger;
                         if (data.Status == true) {
                             layer.msg(""操作成功！"");
                             return true;
                        }
                    }
                });
            }
            , btnAdd: function () {  //添加
                Create();
            }
            , btnFieldAdd: function () {  //添加
                FieldCreate();
            }
            , btnEdi");
                WriteLiteral(@"t: function () {  //编辑
                var checkStatus = layui.table.checkStatus('mainList')
                    , data = checkStatus.data;
                if (data.length != 1) {
                    layer.msg(""请选择编辑的行，且同时只能编辑一行"");
                    return;
                }
                //editDlg.update(data[0]);
                Edit(data[0][""ID""]);
            }

            , search: function () {   //搜索
                mainList({ key: $('#key').val() });
            }
            , btnRefresh: function () {
                mainList();
            }
        };
        $(document).on('click', '.layui-table-view .layui-table-body tr', function (event) {
            var trElem = $(this);
            var tableView = trElem.closest('.layui-table-view');
            tableView.find('.layui-table-body tr.table_tr_click').removeClass('table_tr_click');
            tableView.find('.layui-table-body tr[data-index=""' + trElem.data('index') + '""]').addClass('table_tr_click');
        });
  ");
                WriteLiteral(@"  </script>
    <script type=""text/html"" id=""barIsShowInAdd"">
        {{#  if(d.IsShowInAdd==1){ }}
        <i class=""layui-icon layui-icon-ok icon_choose"" style=""color:green;""></i>
        {{# } else{ }}
        <i class=""layui-icon layui-icon-close icon_choose"" style=""color:red;""></i>
        {{# }  }}
    </script>
    <script type=""text/html"" id=""barIsMustFill"">
        {{#  if(d.IsMustFill==1){ }}
        <i class=""layui-icon layui-icon-ok icon_choose"" style=""color:green;""></i>
        {{# } else{ }}
        <i class=""layui-icon layui-icon-close icon_choose"" style=""color:red;""></i>
        {{# }  }}
    </script>
    <script type=""text/html"" id=""barIsSearchCondition"">
        {{#  if(d.IsSearchCondition==1){ }}
        <i class=""layui-icon layui-icon-ok icon_choose"" style=""color:green;""></i>
        {{# } else{ }}
        <i class=""layui-icon layui-icon-close icon_choose"" style=""color:red;""></i>
        {{# }  }}
    </script>
    <script type=""text/html"" id=""barproperty"">
        ");
                WriteLiteral("<a");
                BeginWriteAttribute("href", " href=\"", 15378, "\"", 15385, 0);
                EndWriteAttribute();
                WriteLiteral(">设置</a>&nbsp;\r\n    </script>\r\n");
            }
            );
            WriteLiteral("\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
